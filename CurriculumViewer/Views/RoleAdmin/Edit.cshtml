@model RoleEditModel
@{
	ViewData["Title"] = "Edit";
}
<div class="bg-primary m-1 p-1 text-white"><h4>Edit Role</h4></div>
<div asp-validation-summary="All" class="text-danger"></div>
<form asp-action="Edit" method="post">
	<input type="hidden" name="roleName" value="@Model.Role.Name" />
	<input type="hidden" name="roleId" value="@Model.Role.Id" />
	<h6 class="bg-info p-1 text-white">Add To @Model.Role.Name</h6>
	@if (Model.NonMembers.Count() == 0)
	{
		<div>Geen gebruikers die geen lid zijn</div>
	}
	else
	{
		<div class="input-field col s12">
			<select multiple name="IdsToAdd">
				@foreach (ApplicationUser user in Model.NonMembers)
				{
					<option value="@user.Id">@user.UserName</option>
				}
			</select>
			<label>Materialize Multiple Select</label>
		</div>

		@*@await Component.InvokeAsync(ViewComponentConstants.MultiSelect, new { InputName = nameof(Model.NonMembers), items = ViewData["nonMembers"], expression = ListComponentFieldTypes.FullName })*@

	}
	<h6 class="bg-info p-1 text-white">Remove From @Model.Role.Name</h6>
	@if (Model.Members.Count() == 0)
	{
		<div>Geen gebruikers</div>
	}
	else
	{
		<div class="input-field col s12">
			<select multiple name="IdsToDelete">
				@foreach (ApplicationUser user in Model.Members)
				{
					<option value="@user.Id">@user.UserName</option>
				}
			</select>
			<label>Materialize Multiple Select</label>
		</div>
	}
	<button type="submit" class="btn btn-primary">Save</button>
	<a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>