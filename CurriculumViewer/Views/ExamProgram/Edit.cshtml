@model ExamProgram
@{
    ViewData["Title"] = "Examenprogramma aanpassen";
}

@await Component.InvokeAsync(ViewComponentConstants.BreadCrumbs)

<div class="row">
    <div class="col s12">
        <h2>@ViewData["Title"]</h2>
    </div>
</div>
<div class="row">
    <div class="col s12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="row">
                <div class="input-field col s6">
                    <label asp-for="StartDate"></label>
                    <input asp-for="StartDate" type="text" class="datepicker" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="input-field col s6">
                    <label asp-for="EndDate"></label>
                    <input asp-for="EndDate" type="text" class="datepicker" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
            </div>
            <div class="input-field">
                <input type="submit" value="Wijzigen" class="btn" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Terug naar lijst</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync(PartialConstants.ValidationScripts);}
}